@startuml
actor       Rider        as u
participant Frontend 		as fe
participant API 		as api
participant OSRM 		as osrm
participant "OSM API" 		as osm
participant DB 		as db
participant Leaflet 		as leaf

u -> fe : Enter start and end address
fe -> api : findRoute(string, string)
api -> osm : getCoordinate(string)
api <-- osm : return Coordinate
api -> osm : getCoordinate(string)
api <-- osm : return Coordinate


api -> db : findRoute(Point, Point)
db -> db : SELECT "closest" FROM route(Point)
api <-- db : return route_id, true

api -> osrm : updateRoute(Route.p1, Route.p2, Point, Point)
osrm -> api : return new_route

db -> db : UPDATE routes(route_id, newRoute)
api <-- db : return route_id, true


fe <-- api : return trip_id
fe -> api : drawRoute(getTrip(trip_id).Route.Geometry)
api -> leaf : for each Coord -> drawOnMap(Coordinate)
u <- leaf : Route is shown

fe -> api : getTripDetails(trip_id)
api -> db : getTrip(trip_id)
db --> api : return Trip
api --> fe : return Trip
fe -> fe : Display Driver, Vehicle, and Route info, etc.

fe -> u : Prompt user to accept ride
u -> fe : Accepts

fe -> api : acceptTrip(trip_id)

api -> db : updateTrip(trip_id, getRoute(route_id), newDelivery(User, Point, Point))
db -> db : UPDATE trips(trip_id), etc.
api <-- db : return trip_id, true
api --> fe : return true
fe -> u : Display confirmation of trip with important details


@enduml


